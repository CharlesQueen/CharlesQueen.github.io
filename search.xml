<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java学习笔记1——基本的数学算符、变量、循环、函数和类</title>
      <link href="/2021/08/11/Java-Learning-Note-1/"/>
      <url>/2021/08/11/Java-Learning-Note-1/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/magic_madoka.jpg" width="50%" height="50%" title="ごまかし" alt=""/>    <audio src="/resources/TrySail - ごまかし.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div><br><h1 id="Java的数据类型type"><a href="#Java的数据类型type" class="headerlink" title="Java的数据类型type"></a>Java的数据类型type</h1><table><thead><tr><th>数据类型</th><th>解释</th><th>最大值</th><th>最小值</th><th>默认值</th></tr></thead><tbody><tr><td>byte</td><td>byte 数据类型是 8 位、有符号的，以二进制补码表示的整数。</td><td>127(2^7-1)</td><td>-128(-2^7)</td><td>0</td></tr><tr><td>short</td><td>short 数据类型是 16 位、有符号的，以二进制补码表示的整数。</td><td>32767(2^15-1)</td><td>-32768(-2^15)</td><td>0</td></tr><tr><td>int</td><td>int 数据类型是 32 位、有符号的，以二进制补码表示的整数。</td><td>2,147,483,647(2^31-1)</td><td>-2,147,483,648(-2^31)</td><td>0</td></tr><tr><td>long</td><td>long 数据类型是 64 位、有符号的，以二进制补码表示的整数。</td><td>9,223,372,036,854,775,807(2^63-1)</td><td>-9,223,372,036,854,775,808(-2^63)</td><td>0L</td></tr><tr><td>float</td><td>float 数据类型是单精度、32位、符合IEEE 754标准的浮点数。</td><td></td><td></td><td>0.0f</td></tr><tr><td>double</td><td>double 数据类型是双精度、64 位、符合 IEEE 754 标准的浮点数。</td><td></td><td></td><td>0.0d</td></tr><tr><td>boolean</td><td>boolean数据类型表示一位（真假、对错）的信息。只有两个取值：true 和 false。这种类型只作为一种标志来记录 true/false 情况。</td><td></td><td></td><td>false</td></tr><tr><td>char</td><td>char 类型是一个单一的 16 位 Unicode 字符char 数据类型可以储存任何字符。</td><td>\uffff（即为 65535）</td><td>\u0000（十进制等效值为 0）</td><td>null</td></tr><tr><td>string</td><td>字符串</td><td></td><td></td><td>null</td></tr></tbody></table><p><b>整数和浮点数这两种数据可以根据需求来选取精度不同的类型。而在定义数据类型的时候应该注意整数和浮点数的写法。</p><figure class="highlight java"><figcaption><span>不同数据类型变量生成示例</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">\\ 整数</span><br><span class="line"><span class="keyword">byte</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">short</span> b = <span class="number">2000</span>;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">40000</span>;</span><br><span class="line"><span class="keyword">long</span> d = <span class="number">3000000000L</span>;</span><br><span class="line">\\ 浮点数</span><br><span class="line">\\ 单精度</span><br><span class="line"><span class="keyword">float</span> f1 = <span class="number">234.5f</span></span><br><span class="line">\\ 双精度</span><br><span class="line"><span class="keyword">double</span>   d1  = <span class="number">7D</span> ;</span><br><span class="line"><span class="keyword">double</span>   d2  = <span class="number">7.</span>; </span><br><span class="line"><span class="keyword">double</span>   d3  =  <span class="number">8.0</span>; </span><br><span class="line"><span class="keyword">double</span>   d4  =  <span class="number">8.D</span>; </span><br><span class="line"><span class="keyword">double</span>   d5  =  <span class="number">12.9867</span>; </span><br><span class="line">\\ 字符</span><br><span class="line"><span class="keyword">char</span> letter = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">\\ 布尔值</span><br><span class="line"><span class="keyword">boolean</span> one = <span class="keyword">true</span>;</span><br><span class="line">\\ 字符串</span><br><span class="line">string str = <span class="string">&#x27;nmsl&#x27;</span></span><br></pre></td></tr></table></figure><br><h1 id="Java的基本类和函数"><a href="#Java的基本类和函数" class="headerlink" title="Java的基本类和函数"></a>Java的基本类和函数</h1><figure class="highlight java"><figcaption><span>Point类示例</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成点的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义私有变量，仅允许在本类中被访问。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> y;</span><br><span class="line">    <span class="comment">// 构造方法，用来构造新的point。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Point</span><span class="params">(<span class="keyword">int</span> startx, <span class="keyword">int</span> starty)</span> </span>&#123;</span><br><span class="line">        x = startx;</span><br><span class="line">        y = starty;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 可以被外部代码调用的方法（method），分别为坐标获取以及两点距离计算。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> y; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">distance</span><span class="params">(Point otherPt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> dx = otherPt.getX();</span><br><span class="line">        <span class="keyword">int</span> dy = otherPt.getY();</span><br><span class="line">        <span class="keyword">return</span> Math.sqrt(dx*dx + dy*dy);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// main函数示例，void表示此函数无return，static表示全局或者静态之意，被static修饰的变量和方法独立于该类的任何对象，可以直接通过类名访问，无需构造新的Point。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(string[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 构造Point的实例：new Point(a, b)</span></span><br><span class="line">        Point p1 = <span class="keyword">new</span> Point(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">        Point p2 = <span class="keyword">new</span> Point(<span class="number">6</span>, <span class="number">8</span>);</span><br><span class="line">        <span class="comment">// println是将输出的参数显示在命令窗口，并在结尾加上换行符，将输出光标定位在下一行的开始。</span></span><br><span class="line">        System.out.println(p1.distance(p2));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h1 id="成员变量的访问权限"><a href="#成员变量的访问权限" class="headerlink" title="成员变量的访问权限"></a>成员变量的访问权限</h1><table><thead><tr><th>权限定义</th><th>解释</th></tr></thead><tbody><tr><td>public</td><td>凡是被public修饰的成员变量，都称为公共变量，它可以被任何类所访问。即允许该变量所属的类中所有方法访问，也允许其他类在外部访问。</td></tr><tr><td>private</td><td>凡是被private修饰的成员变量，都称为私有变量。它只允许在本类的内部访问，任何外部类都不能访问它。</td></tr><tr><td>protected</td><td>凡是被protected修饰的变量，都被称为保护变量。除了允许在本类的内部访问之外，还允许它的子类以及同一个包中的其他类访问。子类是指从该类派生出来的类。包是Java中用于管理类的一种松散的集合。（子类和包以后会细讲）</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> script </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>音乐推荐2——【穢翼のユースティア OP】Asphodelus+自制乐谱</title>
      <link href="/2020/06/08/rec-2/"/>
      <url>/2020/06/08/rec-2/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/秽翼的尤斯蒂娅.png" width="50%" height="50%" title="Asphodelus -アスフォデルス-" alt=""/>    <audio src="/resources/Ceui - Asphodelus -short ver.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div><br><h1 id="自制乐谱"><a href="#自制乐谱" class="headerlink" title="自制乐谱"></a>自制乐谱</h1><p>在网易云听音乐的时候，意外的被推送了以前听过但是有些忘记的一首歌，叫作Asphodeius。然后想起本人以前玩过的八月社的galgame——穢翼のユースティア的OP。当时大一，刚开始玩的时候，就被八月社该作宏大的设定和世界观所深深震撼，而Ceui演唱的这首曲子也很好听，所以就把谱子扒了下来。（声明：本人通常喜欢以Charles Queen以及Kingboghost这两个昵称为在网络上社交所用的化名。以下乐谱皆为本人亲手制作。）</p><h1 id="乐谱MIDI试听"><a href="#乐谱MIDI试听" class="headerlink" title="乐谱MIDI试听"></a>乐谱MIDI试听</h1><div align="middle">    <audio src="/resources/Asphodelus.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">    </audio></div><br><h1 id="乐谱PDF"><a href="#乐谱PDF" class="headerlink" title="乐谱PDF"></a>乐谱PDF</h1><div align="middle">    <embed src="/resources/Asphodelus -アスフォデルス- - 完整乐谱.pdf" type="application/pdf" width="100%" height="800px" internalinstanceid="81" /></div>]]></content>
      
      
      <categories>
          
          <category> Music </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACG </tag>
            
            <tag> Galgame </tag>
            
            <tag> 音乐 </tag>
            
            <tag> 乐谱 </tag>
            
            <tag> August </tag>
            
            <tag> Ceui </tag>
            
            <tag> 穢翼のユースティア </tag>
            
            <tag> 秽翼的尤斯蒂娅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>音乐推荐1——【カルタグラ~ツキ狂イノ病 OST】慟哭+自制乐谱</title>
      <link href="/2020/06/04/rec-1/"/>
      <url>/2020/06/04/rec-1/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/上月由良.png" width="50%" height="50%" title="恸哭" alt=""/>    <audio src="/resources/MANYO - 恸哭.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div><br><h1 id="自制乐谱"><a href="#自制乐谱" class="headerlink" title="自制乐谱"></a>自制乐谱</h1><p>（声明：本人通常喜欢以Charles Queen以及Kingboghost这两个昵称为在网络上社交所用的化名。以下乐谱皆为本人亲手制作。）</p><h1 id="乐谱MIDI试听"><a href="#乐谱MIDI试听" class="headerlink" title="乐谱MIDI试听"></a>乐谱MIDI试听</h1><div align="middle">    <audio src="/resources/恸哭.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">    </audio></div><br><h1 id="乐谱PDF"><a href="#乐谱PDF" class="headerlink" title="乐谱PDF"></a>乐谱PDF</h1><div align="middle">    <embed src="/resources/恸哭.pdf" type="application/pdf" width="100%" height="800px" internalinstanceid="81" /></div>]]></content>
      
      
      <categories>
          
          <category> Music </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACG </tag>
            
            <tag> Innocent Grey </tag>
            
            <tag> Galgame </tag>
            
            <tag> MANYO </tag>
            
            <tag> 音乐 </tag>
            
            <tag> 乐谱 </tag>
            
            <tag> カルタグラ~ツキ狂イノ病 </tag>
            
            <tag> 恋狱月狂病 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青春纪行——大三期末与端学弟的日本自由行</title>
      <link href="/2020/05/31/adolescence/"/>
      <url>/2020/05/31/adolescence/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/07.png" width="50%" height="50%" title="Little Busters!" alt=""/>    <audio src="/resources/Rita - Little Busters!.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div>]]></content>
      
      
      <categories>
          
          <category> Travel Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青春 </tag>
            
            <tag> 旅行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Little Busters——青春与梦想远航的第一站</title>
      <link href="/2020/05/31/lb1/"/>
      <url>/2020/05/31/lb1/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/saya-sasami-kanata.jpg" width="50%" height="50%" title="Boys be smile" alt=""/>    <audio src="/resources/鈴湯 - Boys be smile.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div><br><h1 id="开场的闹剧"><a href="#开场的闹剧" class="headerlink" title="开场的闹剧"></a>开场的闹剧</h1><ul><li><p>在刚点开游戏的时候，游戏界面会出现一幕非常短暂的动画，像是数个萤火虫在泛着波纹的暗夜里飞行，但我却没有过于在意这个动画所要表述的含义，哪里知道，这一点一滴，其实都是这部游戏剧情的伏笔。</p></li><li><p>整个故事的开端是从一位名为枣恭介的男生的回归所引发的井之原真人与宫泽谦吾间的二人大战而展开的。这在我看来，是一个极其优秀的切入点。虽然只是一个普通的校园“斗殴”事件，但这一事件并不会使得整个故事的开端显得突兀，而是给人以一种“啊，是了，日本高中住校生的生活就该是这么充满活力”的感觉。身为主角的直枝理树是二人大战中的其中一方势力——井之原真人的室友，作为一名性格软弱的和事佬，他自然是不愿意两人之间因为不和而打架的，因此他也跟着井之原真人进入了事发现场。这样，主角团的四名男性成员——枣恭介，井之原真人，宫泽谦吾和直枝理树就被十分自然地引入了剧本当中。</p></li><li><p>由于从小到大主角所在的伙伴团队中，恭介总是作为领头羊的存在，能够为团队制定规则，使得团队中的每个伙伴都能够老老实实地遵守他定下的规则，和睦相处，所以，作为引起井之原真人与宫泽谦吾二人“斗殴”大战事情源头的枣恭介自然被主角直枝理树寄予厚望，希望他能够从中调停两人的战斗。<font color=red>（在这里，我发现了第一个让我感到疑惑与不自然的地方——恭介不自然的疲惫，与身上的泥土和树叶。事后证明，这也是一个隐藏的伏笔，会在refrain的阶段被揭开，因此我不会过早的在这里揭开引发恭介身上异常的原因。）</font>身为伙伴团队掌舵者的恭介自然没有拒绝理树的请求，他认为空手战斗的话，身为肌肉笨蛋的真人会占有压倒性优势，而使用木刀的话，作为剑道达人的谦吾则会过于强势，因此他要在一旁观战的学生们向二人投掷无用的杂物，二人随手拿到的杂物便是各自的武器，而且两人只用通过武器本身去进行攻击而不得使用其他武力。由于恭介的规定而不得不使用杂物进行攻击的真人与谦吾运气都十分不佳，毫无攻击力的玩具手枪和猫咪使得战斗愈发焦灼了起来。当然，由于另一个人的介入，真人与谦吾的二人大战并没有持续太多时间。那个人便是恭介的妹妹——枣铃。</p></li><li><p>枣铃与前面出场的四位主角团成员均是熟识的关系，可以说他们五人是真正从小玩到大的青梅竹马的伙伴关系。非常不巧的是，铃是一位极其喜欢猫咪的猫奴，作为真人武器的可怜猫咪自然吸引了她的注意，她顺利地抢夺了真人手中的猫，并通过不俗的武力KO了妄图夺回猫咪的真人。就这样，开场的闹剧便进入了尾声，主角团核心的五名青梅竹马的伙伴也都全部出场了。并且，如此巧妙引出人物的剧本还给了玩家们对于这五名人物大致的印象：</p></li></ul><table><thead><tr><th align="center">姓名</th><th align="center">特征</th></tr></thead><tbody><tr><td align="center">枣恭介</td><td align="center">高领导力，帅气，冷静</td></tr><tr><td align="center">井之原真人</td><td align="center">肌肉笨蛋</td></tr><tr><td align="center">宫泽谦吾</td><td align="center">剑道达人</td></tr><tr><td align="center">直枝理树</td><td align="center">与他人相比毫无特色，十分软弱的主角</td></tr><tr><td align="center">枣铃</td><td align="center">好猫如命，怕生，却又在熟人之中性格强势</td></tr></tbody></table><ul><li>故事自然会继续进行下去，在这次二人大战的闹剧后，主角陷入了五人在儿时从相遇相识到一起玩耍这点点滴滴的回忆之中，那时的他刚刚失去双亲，被开朗的恭介所拯救，加入了由恭介所创立的玩伴团体——Little Busters中，而属于他和他们的那平凡却又不平凡的故事也从此开始。关于这份回忆的具体细节，我在这里便不再赘述。以上便是令我颇为印象深刻的Little Busters EX的开头，没有过于离奇玄幻的故事，也没有特别迷惑突兀的场景，总得来说虽然算不上十分惊艳，甚至还透露着些许无厘头，但却足以以优秀来评价这个开场。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Galgame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青春 </tag>
            
            <tag> ACG </tag>
            
            <tag> Galgame </tag>
            
            <tag> Key社 </tag>
            
            <tag> 友情 </tag>
            
            <tag> Little Busters </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与Galgame最初的邂逅————Little Busters, Key社与友情</title>
      <link href="/2020/05/22/test-my-site/"/>
      <url>/2020/05/22/test-my-site/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/Little Busters!.jpg" width="50%" height="50%" title="ともしび" alt=""/>    <audio src="/resources/麻枝准 - ともしび.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div><br><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><ul><li>高三下学期那年，由于在卓越联盟的自主招生中侥幸被选中，我成为了同济大学2014级预录取的学生。那时，距离高考尚有一个多月的闲暇时光，自认为即使没有复习也不至于连高考一本线都过不了的我，不同于其他正在继续奋战的学生，早早地卸下了升学的重担，开始琢磨自己那高考前的闲暇时光该如何度过。借用东晋诗人陶渊明先生的话来说，那时的我就像“久在樊笼里，复得返自然”的鸟儿那般。只是，那时的我由于严苛的家教，没有自己的手机和电脑。暂时不用学习，却又不知道玩什么好的我，只好将目光瞄准了同学们平常津津乐道的ACG领域。曾经的我对于ACG领域一无所知，以至于闹出过不少笑话。一次，我和高中结构赛的同学一起在空教室里休息，他在休息期间用自己的手机放了一首歌，名叫残酷な天使のテ-ゼ。我也曾听过这首歌，是一首现代机战动画的主题曲。当时的我依稀记得电视中曾经报道过的形象，无意之中将其与高达混淆了。而非常有意思的是，作为情商为负值的我很渴望和他人打好关系，于是强行以此为搭话的主题，却落得了一个被人嘲讽连新世纪福音战士都不知道的下场。这件事对于我的触动很大，也成为了我进入大学以后开始恶补ACG方面的知识的缘由之一。</li></ul><h1 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h1><ul><li>之前经历的那件事只是导致我开始和ACG这一领域不断产生交集的导火索，而接下来的一次意外经历才是我会去尝试扣开Key社动画与游戏大门的真正原因。就在那次混淆事件不久之后，在一次去食堂打饭的路上，正在队伍中等待的我忽然瞥见前排的一名女生正在用手机观看动画，那个动画的画风远远优于我孩提时所见过的各类国产动画的画风。暖色的背景，绚丽的CG，精致的人物，这些特点都吸引着我去发问，去探求。因此，出于好奇，我向她发问了。然后，我第一次知道了Clannad，第一次知道了Key社，也第一次知道了制作这部由游戏改编而来的动画的动画公司的名字——京阿尼。于是，正愁着如何探索ACG这片广淼的海域的我有了第一个落锚点。而Key社，Clannad和京阿尼也成为了我最初进入ACG领域时最常搜索的三个词。</li></ul><h1 id="邂逅"><a href="#邂逅" class="headerlink" title="邂逅"></a>邂逅</h1><ul><li>从那以后，我便一头扎进了ACG的海洋。那时的母亲认为我哪怕拿到了预录取，仍然有可能在高考中意外失足，最后名落孙山，连一本线都到不了，所以她依旧没有放松对我的约束，仍然禁止我去追求学习以外的事物。不过，由于母亲是一名教师，在高考前的一段时间，高中的学校开始陆续给高三的同学放假，让他们不要过度紧张，而是放松心情、劳逸结合、充满自信地走上考场。作为在自主招生中脱颖而出地我自然也在放假的学生之列。于是，我利用了母亲不在家的时间段开始探索起了ACG的领域。非常凑巧的是，当时的Bilibili是一个盗版横行的弹幕网站，还远没有发展到如今这般大公司的规模。那个时候，我通过搜索key社的关键词首次看到了Little Busters的动画。Little Busters的第一季动画大多都是嬉闹而又欢乐的日常，没有什么过于催泪的地方，而被它的故事和画风所吸引的我借助着百度百科的科普，了解到了Little Busters其实是由Key社的Galgame游戏Little Busters EX所改编而来的动画。既然改编的动画都这么棒，那作为原作的游戏一定会更加引人入胜吧。抱着这种想法的我，找到了当时由澄空学园汉化组所汉化的Little Busters EX的游戏，开始了我人生中的第一次Galgame之旅，一次让我刻骨铭心的旅程。</li></ul><div align="middle">    <img src="/resources/Little Busters Members.jpg" width="100%" height="100%" alt=""/></div><h1 id="青春与探寻"><a href="#青春与探寻" class="headerlink" title="青春与探寻"></a>青春与探寻</h1><ul><li>也不知道是为什么，当Little Busters EX的开场OP开始的那一刹那，伴随着由Rita演唱的主题曲Little Busters!，我便立即感受到了一种从未感受到的激昂活力，这才是年轻高中生真正应该拥有的青春，我的青春也从这一刻开始，真正意义上地扬帆起航，载着我的憧憬与幻想，在二次元中开始了一段没有终点地旅途。作为青春的第一站，Little Busters!承载了我太多美好的回忆。接下来，我会根据Little Busters EX剧情的进展来进一步地介绍其中让我印象深刻的人物与故事。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Galgame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青春 </tag>
            
            <tag> ACG </tag>
            
            <tag> Galgame </tag>
            
            <tag> Key社 </tag>
            
            <tag> 友情 </tag>
            
            <tag> Little Busters </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo常用博客更新代码</title>
      <link href="/2020/05/21/hello-world/"/>
      <url>/2020/05/21/hello-world/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/金曜日のおはよう.jpg" width="50%" height="50%" title="金曜日のおはよう -Another Story-" alt=""/>    <audio src="/resources/雨宮天 - 金曜日のおはよう -Another Story-.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div><br><h2 id="Hexo常用代码备注"><a href="#Hexo常用代码备注" class="headerlink" title="Hexo常用代码备注"></a>Hexo常用代码备注</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli </span><br></pre></td></tr></table></figure><h3 id="下载Next最新主题框架"><a href="#下载Next最新主题框架" class="headerlink" title="下载Next最新主题框架"></a>下载Next最新主题框架</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog </span><br></pre></td></tr></table></figure><h3 id="撰写新博客文章"><a href="#撰写新博客文章" class="headerlink" title="撰写新博客文章"></a>撰写新博客文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;The name of your new post&quot;</span></span><br></pre></td></tr></table></figure><h3 id="post-md文件内常用指令"><a href="#post-md文件内常用指令" class="headerlink" title="post.md文件内常用指令"></a>post.md文件内常用指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--这玩意儿供你插入图片，歌名和与文章相应的循环播放的歌曲用的。--&gt;</span><br><span class="line">&lt;!--在搞这个之前记得把hexo的config文件中的post_asset_folder的布尔值改为<span class="literal">true</span>。--&gt;</span><br><span class="line">&lt;!--这样以后，<span class="built_in">source</span>/_post/路径下会在你新建post的时候生成一个供你存放音源图源的文件夹。--&gt;</span><br><span class="line"></span><br><span class="line">&lt;div align=<span class="string">&quot;middle&quot;</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;xxxx唱片图片.jpg&quot;</span> width=<span class="string">&quot;50%&quot;</span> height=<span class="string">&quot;50%&quot;</span> title=<span class="string">&quot;xxxx歌名&quot;</span> alt=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">&lt;audio src=<span class="string">&quot;xxxx.mp3&quot;</span> style=<span class="string">&quot;max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;&quot;</span> controls=<span class="string">&quot;controls&quot;</span> autoplay=<span class="string">&quot;autoplay&quot;</span> loop=<span class="string">&quot;loop&quot;</span> preload=<span class="string">&quot;meta&quot;</span>&gt;</span><br><span class="line">&lt;/audio&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;！--简单的空行指令--&gt;</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="将静态网页文件部署在远程网页中"><a href="#将静态网页文件部署在远程网页中" class="headerlink" title="将静态网页文件部署在远程网页中"></a>将静态网页文件部署在远程网页中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h3 id="临时展示（localhost-4000）"><a href="#临时展示（localhost-4000）" class="headerlink" title="临时展示（localhost:4000）"></a>临时展示（localhost:4000）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态网页爬虫示例——如何抓取答题界面题目</title>
      <link href="/2020/05/20/spider-example/"/>
      <url>/2020/05/20/spider-example/</url>
      
        <content type="html"><![CDATA[<div align="middle">    <img src="/resources/Kudryavka.png" width="50%" height="50%" title="Sweet & Sweet CHERRY" alt=""/>    <audio src="/resources/堀江由衣 - Sweet & Sweet CHERRY.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" autoplay="autoplay" loop="loop" preload="meta">    </audio></div><br><h1 id="动态界面爬虫示例"><a href="#动态界面爬虫示例" class="headerlink" title="动态界面爬虫示例"></a>动态界面爬虫示例</h1><p>这里仅针对编程技巧差如狗的同学们（比如本博主）一些简单粗暴的爬虫技巧。</p><h2 id="关键点搜寻"><a href="#关键点搜寻" class="headerlink" title="关键点搜寻"></a>关键点搜寻</h2><p>牢记两个东西，一个是Request URL，另一个是Request Header(准确的说是Request Header中的User-Agent)。我们寻找它的方式很简单，Chrome浏览器鼠标右键，打开检查。然后按照Network-&gt;XHR的顺序点击，寻找动态网页有没有什么通过发送请求来获取的链接文件，比如xxxx.php。如果你打开发现没有文件，请刷新后再看过。于是你看到下面这张图。</p><p><img src="/resources/huahuo.jpg"></p><p>于是你瞬间意识到事情不简单，然后把它整段地扒拉了下来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">General:</span><br><span class="line">Request URL: https://www.say-huahuo.com/qa.php</span><br><span class="line">Request Method: GET</span><br><span class="line">Status Code: 200 </span><br><span class="line">Remote Address: 104.24.98.123:443</span><br><span class="line">Referrer Policy: no-referrer-when-downgrade</span><br><span class="line"></span><br><span class="line">Response Headers:</span><br><span class="line">alt-svc: h3-27=<span class="string">&quot;:443&quot;</span>; ma=86400, h3-25=<span class="string">&quot;:443&quot;</span>; ma=86400, h3-24=<span class="string">&quot;:443&quot;</span>; ma=86400, h3-23=<span class="string">&quot;:443&quot;</span>; ma=86400</span><br><span class="line">cache-control: no-store, no-cache, must-revalidate</span><br><span class="line">cf-cache-status: DYNAMIC</span><br><span class="line">cf-ray: 59602ebbbd56aa4e-SIN</span><br><span class="line">cf-request-id: 02cffb89520000aa4ec1b86200000001</span><br><span class="line">content-encoding: br</span><br><span class="line">content-type: text/html; charset=UTF-8</span><br><span class="line">date: Tue, 19 May 2020 19:21:43 GMT</span><br><span class="line">expect-ct: max-age=604800, report-uri=<span class="string">&quot;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&quot;</span></span><br><span class="line">expires: Thu, 19 Nov 1981 08:52:00 GMT</span><br><span class="line">pragma: no-cache</span><br><span class="line">server: cloudflare</span><br><span class="line">status: 200</span><br><span class="line">strict-transport-security: max-age=15552000; includeSubDomains</span><br><span class="line">x-powered-by: PHP/7.3.17</span><br><span class="line"></span><br><span class="line">Resquest Headers:</span><br><span class="line">:authority: www.say-huahuo.com</span><br><span class="line">:method: GET</span><br><span class="line">:path: /qa.php</span><br><span class="line">:scheme: https</span><br><span class="line">accept: application/json, text/plain, */*</span><br><span class="line">accept-encoding: gzip, deflate, br</span><br><span class="line">accept-language: zh,en;q=0.9,en-US;q=0.8,zh-TW;q=0.7</span><br><span class="line">cookie: __cfduid=df20cba4727396e1ed49ee026cabfda4d1589903621; FKX9_aeeb_saltkey=AZCORcaa; FKX9_aeeb_lastvisit=1589900021; FKX9_aeeb_sid=A10BEi; FKX9_aeeb_visitedfid=55; FKX9_aeeb_viewid=tid_38897; FKX9_aeeb_st_p=0%7C1589903803%7C0e03c5e65115dd1fde5dc1e8067bfa6a; FKX9_aeeb_secqaa=11333.adc5aad3849465fb52; FKX9_aeeb_lastact=1589903820%09misc.php%09seccode; FKX9_aeeb_seccode=11334.5d33298c3891337235; PHPSESSID=d6srkdmo0h4avtdfgrv91fios3</span><br><span class="line">referer: https://www.say-huahuo.com/answer/</span><br><span class="line">sec-fetch-dest: empty</span><br><span class="line">sec-fetch-mode: cors</span><br><span class="line">sec-fetch-site: same-origin</span><br><span class="line">user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36</span><br><span class="line">x-requested-with: XMLHttpRequest</span><br></pre></td></tr></table></figure><p>你发现这玩意儿是个通过request.get的请求方式来获取链接文件的。那么很简单，把URL和user-agent通过Ctrl+C搞过来不就得了。然后你就觉得你会了，加紧力度地写了几行简单的代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.say-huahuo.com/qa.php&#x27;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line"> <span class="string">&#x27;Chrome/81.0.4044.138 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url=url, headers=headers, verify=False, timeout=30)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>你一运行，突然发现，咦这text咋回事？这是乱码了么？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u7231\u8863\u9171\u5927\u80dc\u5229\u51fa\u81ea\u54ea\u90e8\u756a\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;6239xt&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u6211\u7684\u59b9\u59b9\u4e0d\u53ef\u80fd\u600e\u4e48\u53ef\u7231&quot;</span>,<span class="string">&quot;\u6211\u7684\u5973\u53cb\u548c\u9752\u6885\u7af9\u9a6c\u7684\u60e8\u70c8\u4fee\u7f57\u573a&quot;</span>,<span class="string">&quot;\u5200\u5251\u795e\u57df&quot;</span>,<span class="string">&quot;\u6211\u7684\u9752\u6625\u604b\u7231\u7269\u8bed\u679c\u7136\u6709\u95ee\u9898&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u8725\u8734\u306e\u5c3b\u5c3e\u5207\u308a\u4e2d\u7537\u4e3b\u4e3a\u4ec0\u4e48\u75f4\u8ff7\u4e8e\u4eba\u4f53\u518d\u751f\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;zfiuu7&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u5973\u670b\u53cb\u5f97\u764c\u75c7\u4e86&quot;</span>,<span class="string">&quot;\u5973\u670b\u53cb\u5f53\u7740\u4ed6\u7684\u9762\u8df3\u8f68\u81ea\u6740\u4e86&quot;</span>,<span class="string">&quot;\u5973\u670b\u53cb\u4e0d\u7231\u4ed6\u4e86&quot;</span>,<span class="string">&quot;\u60f3\u8981\u6551\u4eba&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u8bf7\u95ee\u8bba\u575b\u7684\u5b66\u56ed\u957f\u662f\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;wjdddi&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;say\u82b1\u706b&quot;</span>,<span class="string">&quot;Say\u706b\u82b1&quot;</span>,<span class="string">&quot;say\u706b\u82b1&quot;</span>,<span class="string">&quot;Say\u82b1\u706b&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u88ab\u8a89\u4e3a\u4e3a\u795e\u4ed9\u6c34\u7684\u662f\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;s8zlu8&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;Albion\u5065\u5eb7\u6c34&quot;</span>,<span class="string">&quot;\u9edb\u73c2\u7d2b\u82cf\u6c34&quot;</span>,<span class="string">&quot;SK-II&quot;</span>,<span class="string">&quot;\u5d02\u5c71\u767d\u82b1\u86c7\u8349\u6c34 &quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u8001\u865a\u662f____\u3002&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;2iwjmt&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u7231\u7684\u6218\u58eb&quot;</span>,<span class="string">&quot;\u6696\u5165\u5fc3\u7530&quot;</span>,<span class="string">&quot;\u50ac\u4eba\u6cea\u4e0b&quot;</span>,<span class="string">&quot;\u5251\u9053\u72c2\u4eba &quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u56fd\u5185\u73a9\u5bb6\u5bf9\u4e8e\u300a\u590f\u5a03\u5e74\u4ee3\u7eaa\u300b\u91cc\u5927\u516c\u4e3b\u7684\u4e89\u8bae\u4e3b\u8981\u539f\u56e0\u4e3a\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;9vulnl&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u4e0d\u53ef\u653b\u7565&quot;</span>,<span class="string">&quot;ntr&quot;</span>,<span class="string">&quot;\u8d2b\u4e73&quot;</span>,<span class="string">&quot;\u4e11\u964b&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u4ee5\u4e0b\u90a3\u4f5c\u4e0d\u662fKEY\u793e\u4f5c\u54c1\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;u7bqwi&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u300aKanon\u300b&quot;</span>,<span class="string">&quot;\u300aCLANNAD\u300b&quot;</span>,<span class="string">&quot;\u300aLittle Busters!\u300b&quot;</span>,<span class="string">&quot;\u300aClover Day\u2019s\u300b&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u63d0\u8d77\u6cd5\u56fd\u5267\u4f5c\u5bb6\u7f57\u65af\u4e39\u7684\u4ee3\u8868\u4f5c\u300a\u897f\u54c8\u8bfa\u300b\uff0c\u4f60\u4f1a\u60f3\u5230\u4ee5\u4e0b\u54ea\u90e8galgame\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;vbxk2k&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u521d\u96ea\u6a31&quot;</span>,<span class="string">&quot;\u6a31\u4e4b\u8bd7&quot;</span>,<span class="string">&quot;\u7535\u6ce2\u6d88\u901d\u4e4b\u65e5&quot;</span>,<span class="string">&quot;\u7f8e\u597d\u7684\u6bcf\u4e00\u5929&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u52a8\u753b\u300a\u7edd\u56ed\u7684\u66b4\u98ce\u96e8\u300b\u91cc\uff0c\u4e0d\u7834\u7231\u82b1\u7ecf\u5e38\u7231\u5f15\u7528____\u7684\u53e5\u5b50\u3002&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;q76pmn&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u6728\u6876&quot;</span>,<span class="string">&quot;\u9e45\u5988\u5988\u7ae5\u8c23&quot;</span>,<span class="string">&quot;\u54c8\u59c6\u96f7\u7279&quot;</span>,<span class="string">&quot;\u5b64\u5c9b\u4e4b\u9b3c&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u4e0b\u9762\u54ea\u4e00\u90e8\u4e0d\u662f\u949f\u8868\u793e\u7684\u4f5c\u54c1\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;mv4s5j&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u624b\u57a2\u5857\u308c\u306e\u5929\u4f7f&quot;</span>,<span class="string">&quot;\u53cb\u7231&quot;</span>,<span class="string">&quot;maggot\u00a0biats&quot;</span>,<span class="string">&quot;euphoria&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u7eb8\u4e0a\u9b54\u6cd5\u4f7f\u4e2d\u54ea\u4e00\u4e2a\u662f\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;vak6cu&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u56db\u6761\u7409\u7483&quot;</span>,<span class="string">&quot;\u4f0f\u89c1\u7406\u592e&quot;</span>,<span class="string">&quot;\u6708\u675c\u5983&quot;</span>,<span class="string">&quot;\u6e38\u884c\u5bfa\u591c\u5b50&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u52a8\u753b\u300a\u5e72\u7269\u59b9\uff01\u5c0f\u57cb\u300b\u4e2d\uff0c\u5c0f\u57cb\u7684\u6e38\u620f\u540d\u79f0\u662f\u4ec0\u4e48\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;788l26&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;JNB&quot;</span>,<span class="string">&quot;UMR&quot;</span>,<span class="string">&quot;UZR&quot;</span>,<span class="string">&quot;PDD&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u52a8\u753b\u6e05\u604b\u8d70\u4e86\u51e0\u6761\u5973\u4e3b\u7ebf\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;9hsi3x&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;key\u793e\u7684\u6625\u590f\u51ac\u79cb\u56db\u5b63\u5206\u522b\u662f\uff0cCLANNAD\u3001AIR\u3001Kanon\u548c____\u3002 &quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;hialhr&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;Memories Off&quot;</span>,<span class="string">&quot;\u79cb\u8272\u604b\u534e&quot;</span>,<span class="string">&quot;\u79cb\u8272\u4e4b\u7a7a&quot;</span>,<span class="string">&quot;ONE\uff5e\u8f89\u4e4b\u5b63\u8282\uff5e&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u300a\u9ed1\u6267\u4e8b\u300b\u4e2d\uff0c\u4f0a\u4e3d\u838e\u767d\u662f\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;ie9pev&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u5730\u4e3b\u5bb6\u7684\u50bb\u5973\u513f&quot;</span>,<span class="string">&quot;\u6218\u6597\u5973\u4ec6&quot;</span>,<span class="string">&quot;\u516c\u4e3b&quot;</span>,<span class="string">&quot;\u5251\u672f\u5929\u624d&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u65e5\u672c\u540c\u4eba\u6f2b\u753b\u5bb6\u4e8c\u9636\u5802\u307f\u3064\u304d\u548c\u54ea\u4f4d\u6f2b\u753b\u5bb6\u5173\u7cfb\u6700\u8fd1\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;eot6cy&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u5927\u5c9b\u6c38\u8fdc&quot;</span>,<span class="string">&quot;\u5d69\u4e43\u6714&quot;</span>,<span class="string">&quot;\u306a\u3082\u308a&quot;</span>,<span class="string">&quot;\u30b5\u30d6\u30ed\u30a6\u30bf&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u4ee5\u4e0b\u54ea\u4e2a\u89d2\u8272\u51fa\u81ea\u7ea6\u4f1a\u5927\u4f5c\u6218\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;uw0p7t&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u91ce\u9e70\u4e09\u56db&quot;</span>,<span class="string">&quot;\u5929\u8349\u56db\u90ce&quot;</span>,<span class="string">&quot;\u65f6\u5d0e\u72c2\u4e09&quot;</span>,<span class="string">&quot;\u52a0\u85e4\u5609\u4e00&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u4ee5\u4e0b\u54ea\u4e2a\u4eba\u7269\u548c\u4f50\u4f2f\u514b\u54c9\u51fa\u73b0\u5728\u540c\u4e00\u6b3e\u6e38\u620f\u91cc\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;4cu136&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u74e6\u5c14\u4f0a\u8fbe&quot;</span>,<span class="string">&quot;\u5fa1\u5802\u5b5d\u5178&quot;</span>,<span class="string">&quot;\u4f50\u4f2f\u864e\u6b21\u90ce&quot;</span>,<span class="string">&quot;rin&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u661f\u4e4b\u5361\u6bd4\u4e2d\uff0c\u5361\u6bd4\u541e\u4e0b\u5c0f\u602a\u4e4b\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;0m5dna&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u53d8\u8eab&quot;</span>,<span class="string">&quot;\u4ec0\u4e48\u90fd\u4e0d\u53d1\u751f&quot;</span>,<span class="string">&quot;\u6fc0\u6012\u5c0f\u602a&quot;</span>,<span class="string">&quot;\u4ee5\u4e0a\u90fd\u6709\u53ef\u80fd &quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;\u4ee5\u4e0b\u56db\u4e2a\u89d2\u8272\u54ea\u4e2a\u559c\u6b22\u5973\u6027\uff1f&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;fbrksh&quot;</span>,<span class="string">&quot;options&quot;</span>:[<span class="string">&quot;\u4f50\u6761\u5229\u4eba&quot;</span>,<span class="string">&quot;\u5ddd\u795e\u767e\u4ee3&quot;</span>,<span class="string">&quot;\u79cb\u6fd1\u6216&quot;</span>,<span class="string">&quot;\u4f50\u85e4\u5723&quot;</span>],<span class="string">&quot;img&quot;</span>:<span class="string">&quot;&quot;</span>&#125;]</span><br></pre></td></tr></table></figure><p>不！实际上这是json数据。json可真是个好文明，都不需要解析器，直接查字典就可以转码了。至于如何更好地补全题库，既然他这出题是随机的，那么我多for loop一下，总是能把题目全给拿下的。于是，粗暴的爬虫代码就完成了。</p><h2 id="花火学园答题界面Python代码示例"><a href="#花火学园答题界面Python代码示例" class="headerlink" title="花火学园答题界面Python代码示例"></a>花火学园答题界面Python代码示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目标: https://www.say-huahuo.com/answer/#/exam/</span></span><br><span class="line"><span class="comment"># 返回的是json数据，那么就不需要解析器了。直接转字典就好了。</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(0, 20):</span><br><span class="line">    <span class="comment"># 传递信息的真实url</span></span><br><span class="line">    url = <span class="string">&#x27;https://www.say-huahuo.com/qa.php&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解决拒绝访问问题</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                             <span class="string">&#x27;Chrome/81.0.4044.138 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用request打开并获取网页内容</span></span><br><span class="line">    response = requests.get(url=url, headers=headers, verify=False, timeout=30)</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line"></span><br><span class="line">    content = response.content</span><br><span class="line"></span><br><span class="line">    <span class="comment"># json格式转换为字典</span></span><br><span class="line">    result = json.loads(content)</span><br><span class="line">    <span class="built_in">print</span>(content, result)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取相关信息并存入列表的字典中</span></span><br><span class="line">    HuaHuo_List = []</span><br><span class="line">    mos = result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0, len(mos)):</span><br><span class="line">        mo = &#123;&#125;</span><br><span class="line">        mo[<span class="string">&#x27;title&#x27;</span>] = mos[i][<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">        mo[<span class="string">&#x27;options&#x27;</span>] = mos[i][<span class="string">&#x27;options&#x27;</span>]</span><br><span class="line">        HuaHuo_List.append(mo)</span><br><span class="line"></span><br><span class="line">    file = open(<span class="string">&#x27;HuaHuo.txt&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> HuaHuo_List:</span><br><span class="line">        file.write(str(line))</span><br><span class="line"></span><br><span class="line">        file.write(<span class="string">&#x27;\n&#x27;</span>)  <span class="comment"># 显示写入换行</span></span><br><span class="line"></span><br><span class="line">    file.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> script </tag>
            
            <tag> spider </tag>
            
            <tag> Python </tag>
            
            <tag> web crawler </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
